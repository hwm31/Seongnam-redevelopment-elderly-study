✅ XGBoost successfully imported!
🚀 Starting Enhanced Ensemble Analysis: Original vs SMOTE Comparison
📁 Make sure your data files are accessible!
Before redevelopment (65+): 708 samples
After redevelopment (65+): 461 samples

=== Comparing Original vs SMOTE Balanced Data ===
📊 Models included: RandomForest, GradientBoosting, XGBoost, LogisticRegression, KNeighbors, DecisionTree, VotingEnsemble

--- Testing Original Distribution ---

=== Before Redevelopment Ensemble Analysis (NONE) ===

✅ All features processed to POSITIVE direction (higher = better):
   - Future_Residence_Intent: Higher = Stronger residence intention
   - Residence_Satisfaction: Higher = Higher residence satisfaction
   - Life_Satisfaction: Higher = Higher life satisfaction
   - Place_Attachment: Higher = Stronger place attachment
   - Settlement_Mindset: Higher = Stronger settlement mindset
   - Debt_Free: 1=No debt(good), 0=Has debt(bad)
   - Age, Residence_Period, Monthly_Income: Original direction maintained
Features prepared: 10
Original sample size: 708

Original class distribution:
  Low: 326
  Medium: 264
  High: 118

After Original Distribution (No Balancing):
  Low: 326
  Medium: 264
  High: 118
✅ XGBoost added to base tree models

--- Step 1: Evaluating Base Models (Performance Filtering) ---
  Evaluating RandomForest...
    Accuracy: 0.6371 (±0.0289)
  Evaluating GradientBoosting...
    Accuracy: 0.6060 (±0.0384)
  Evaluating XGBoost...
    Accuracy: 0.6272 (±0.0224)

--- Step 2: Performance Filtering Results ---
✅ Qualified models (Accuracy >= 0.5):
   - RandomForest: 0.6371
   - GradientBoosting: 0.6060
   - XGBoost: 0.6272
   + Added LogisticRegression to ensemble: 0.6414
   + Added KNeighbors to ensemble: 0.5636
   + Added DecisionTree to ensemble: 0.5523

✅ VotingEnsemble created with 6 qualified models

--- Original Features Ensemble Analysis ---
Models to analyze: ['RandomForest', 'GradientBoosting', 'XGBoost', 'LogisticRegression', 'KNeighbors', 'DecisionTree', 'VotingEnsemble']
  Analyzing RandomForest...
    Accuracy: 0.6371 (±0.0289)
  Analyzing GradientBoosting...
    Accuracy: 0.6060 (±0.0384)
  Analyzing XGBoost...
    Accuracy: 0.6272 (±0.0224)
  Analyzing LogisticRegression...
    Accuracy: 0.6414 (±0.0554)
  Analyzing KNeighbors...
    Accuracy: 0.5636 (±0.0465)
  Analyzing DecisionTree...
    Accuracy: 0.5523 (±0.0208)
  Analyzing VotingEnsemble...
    Accuracy: 0.6357 (±0.0501)

--- PCA Components Ensemble Analysis ---
  Analyzing RandomForest...
    Accuracy: 0.6145 (±0.0350)
  Analyzing GradientBoosting...
    Accuracy: 0.5806 (±0.0438)
  Analyzing XGBoost...
    Accuracy: 0.5848 (±0.0339)
  Analyzing LogisticRegression...
    Accuracy: 0.6414 (±0.0554)
  Analyzing KNeighbors...
    Accuracy: 0.5636 (±0.0465)
  Analyzing DecisionTree...
    Accuracy: 0.5636 (±0.0332)
  Analyzing VotingEnsemble...
    Accuracy: 0.6074 (±0.0278)

=== After Redevelopment Ensemble Analysis (NONE) ===

✅ All features processed to POSITIVE direction (higher = better):
   - Future_Residence_Intent: Higher = Stronger residence intention
   - Residence_Satisfaction: Higher = Higher residence satisfaction
   - Life_Satisfaction: Higher = Higher life satisfaction
   - Place_Attachment: Higher = Stronger place attachment
   - Settlement_Mindset: Higher = Stronger settlement mindset
   - Debt_Free: 1=No debt(good), 0=Has debt(bad)
   - Age, Residence_Period, Monthly_Income: Original direction maintained
Features prepared: 10
Original sample size: 461

Original class distribution:
  Low: 279
  Medium: 127
  High: 55

After Original Distribution (No Balancing):
  Low: 279
  Medium: 127
  High: 55
✅ XGBoost added to base tree models

--- Step 1: Evaluating Base Models (Performance Filtering) ---
  Evaluating RandomForest...
    Accuracy: 0.8026 (±0.0437)
  Evaluating GradientBoosting...
    Accuracy: 0.7700 (±0.0500)
  Evaluating XGBoost...
    Accuracy: 0.7853 (±0.0396)

--- Step 2: Performance Filtering Results ---
✅ Qualified models (Accuracy >= 0.5):
   - RandomForest: 0.8026
   - GradientBoosting: 0.7700
   - XGBoost: 0.7853
   + Added LogisticRegression to ensemble: 0.7809
   + Added KNeighbors to ensemble: 0.7028
   + Added DecisionTree to ensemble: 0.7137

✅ VotingEnsemble created with 6 qualified models

--- Original Features Ensemble Analysis ---
Models to analyze: ['RandomForest', 'GradientBoosting', 'XGBoost', 'LogisticRegression', 'KNeighbors', 'DecisionTree', 'VotingEnsemble']
  Analyzing RandomForest...
    Accuracy: 0.8026 (±0.0437)
  Analyzing GradientBoosting...
    Accuracy: 0.7700 (±0.0500)
  Analyzing XGBoost...
    Accuracy: 0.7853 (±0.0396)
  Analyzing LogisticRegression...
    Accuracy: 0.7809 (±0.0412)
  Analyzing KNeighbors...
    Accuracy: 0.7028 (±0.0332)
  Analyzing DecisionTree...
    Accuracy: 0.7137 (±0.0504)
  Analyzing VotingEnsemble...
    Accuracy: 0.7852 (±0.0416)

--- PCA Components Ensemble Analysis ---
  Analyzing RandomForest...
    Accuracy: 0.7136 (±0.0300)
  Analyzing GradientBoosting...
    Accuracy: 0.6920 (±0.0450)
  Analyzing XGBoost...
    Accuracy: 0.7050 (±0.0253)
  Analyzing LogisticRegression...
    Accuracy: 0.7788 (±0.0360)
  Analyzing KNeighbors...
    Accuracy: 0.7157 (±0.0385)
  Analyzing DecisionTree...
    Accuracy: 0.6486 (±0.0211)
  Analyzing VotingEnsemble...
    Accuracy: 0.7267 (±0.0212)

--- Testing SMOTE Balanced ---

=== Before Redevelopment Ensemble Analysis (SMOTE) ===

✅ All features processed to POSITIVE direction (higher = better):
   - Future_Residence_Intent: Higher = Stronger residence intention
   - Residence_Satisfaction: Higher = Higher residence satisfaction
   - Life_Satisfaction: Higher = Higher life satisfaction
   - Place_Attachment: Higher = Stronger place attachment
   - Settlement_Mindset: Higher = Stronger settlement mindset
   - Debt_Free: 1=No debt(good), 0=Has debt(bad)
   - Age, Residence_Period, Monthly_Income: Original direction maintained
Features prepared: 10
Original sample size: 708

Original class distribution:
  Low: 326
  Medium: 264
  High: 118

After SMOTE Oversampling:
  Low: 326
  Medium: 326
  High: 326
✅ XGBoost added to base tree models

--- Step 1: Evaluating Base Models (Performance Filtering) ---
  Evaluating RandomForest...
    Accuracy: 0.7250 (±0.0426)
  Evaluating GradientBoosting...
    Accuracy: 0.7127 (±0.0289)
  Evaluating XGBoost...
    Accuracy: 0.7148 (±0.0284)

--- Step 2: Performance Filtering Results ---
✅ Qualified models (Accuracy >= 0.5):
   - RandomForest: 0.7250
   - GradientBoosting: 0.7127
   - XGBoost: 0.7148
   + Added LogisticRegression to ensemble: 0.6647
   + Added KNeighbors to ensemble: 0.6738
   + Added DecisionTree to ensemble: 0.6473

✅ VotingEnsemble created with 6 qualified models

--- Original Features Ensemble Analysis ---
Models to analyze: ['RandomForest', 'GradientBoosting', 'XGBoost', 'LogisticRegression', 'KNeighbors', 'DecisionTree', 'VotingEnsemble']
  Analyzing RandomForest...
    Accuracy: 0.7250 (±0.0426)
  Analyzing GradientBoosting...
    Accuracy: 0.7127 (±0.0289)
  Analyzing XGBoost...
    Accuracy: 0.7148 (±0.0284)
  Analyzing LogisticRegression...
    Accuracy: 0.6647 (±0.0398)
  Analyzing KNeighbors...
    Accuracy: 0.6738 (±0.0275)
  Analyzing DecisionTree...
    Accuracy: 0.6473 (±0.0252)
  Analyzing VotingEnsemble...
    Accuracy: 0.7260 (±0.0248)

--- PCA Components Ensemble Analysis ---
  Analyzing RandomForest...
    Accuracy: 0.7086 (±0.0330)
  Analyzing GradientBoosting...
    Accuracy: 0.6913 (±0.0258)
  Analyzing XGBoost...
    Accuracy: 0.7076 (±0.0399)
  Analyzing LogisticRegression...
    Accuracy: 0.6647 (±0.0398)
  Analyzing KNeighbors...
    Accuracy: 0.6738 (±0.0275)
  Analyzing DecisionTree...
    Accuracy: 0.6053 (±0.0090)
  Analyzing VotingEnsemble...
    Accuracy: 0.6994 (±0.0241)

=== After Redevelopment Ensemble Analysis (SMOTE) ===

✅ All features processed to POSITIVE direction (higher = better):
   - Future_Residence_Intent: Higher = Stronger residence intention
   - Residence_Satisfaction: Higher = Higher residence satisfaction
   - Life_Satisfaction: Higher = Higher life satisfaction
   - Place_Attachment: Higher = Stronger place attachment
   - Settlement_Mindset: Higher = Stronger settlement mindset
   - Debt_Free: 1=No debt(good), 0=Has debt(bad)
   - Age, Residence_Period, Monthly_Income: Original direction maintained
Features prepared: 10
Original sample size: 461

Original class distribution:
  Low: 279
  Medium: 127
  High: 55

After SMOTE Oversampling:
  Medium: 279
  Low: 279
  High: 279
✅ XGBoost added to base tree models

--- Step 1: Evaluating Base Models (Performance Filtering) ---
  Evaluating RandomForest...
    Accuracy: 0.8746 (±0.0105)
  Evaluating GradientBoosting...
    Accuracy: 0.8614 (±0.0304)
  Evaluating XGBoost...
    Accuracy: 0.8769 (±0.0241)

--- Step 2: Performance Filtering Results ---
✅ Qualified models (Accuracy >= 0.5):
   - RandomForest: 0.8746
   - GradientBoosting: 0.8614
   - XGBoost: 0.8769
   + Added LogisticRegression to ensemble: 0.7407
   + Added KNeighbors to ensemble: 0.8136
   + Added DecisionTree to ensemble: 0.8029

✅ VotingEnsemble created with 6 qualified models

--- Original Features Ensemble Analysis ---
Models to analyze: ['RandomForest', 'GradientBoosting', 'XGBoost', 'LogisticRegression', 'KNeighbors', 'DecisionTree', 'VotingEnsemble']
  Analyzing RandomForest...
    Accuracy: 0.8746 (±0.0105)
  Analyzing GradientBoosting...
    Accuracy: 0.8614 (±0.0304)
  Analyzing XGBoost...
    Accuracy: 0.8769 (±0.0241)
  Analyzing LogisticRegression...
    Accuracy: 0.7407 (±0.0263)
  Analyzing KNeighbors...
    Accuracy: 0.8136 (±0.0139)
  Analyzing DecisionTree...
    Accuracy: 0.8029 (±0.0122)
  Analyzing VotingEnsemble...
    Accuracy: 0.8698 (±0.0224)

--- PCA Components Ensemble Analysis ---
  Analyzing RandomForest...
    Accuracy: 0.8506 (±0.0231)
  Analyzing GradientBoosting...
    Accuracy: 0.8280 (±0.0228)
  Analyzing XGBoost...
    Accuracy: 0.8507 (±0.0164)
  Analyzing LogisticRegression...
    Accuracy: 0.7431 (±0.0278)
  Analyzing KNeighbors...
    Accuracy: 0.8041 (±0.0243)
  Analyzing DecisionTree...
    Accuracy: 0.7814 (±0.0265)
  Analyzing VotingEnsemble...
    Accuracy: 0.8471 (±0.0264)

Creating visualizations for SMOTE method...
  ✅ Individual model metrics plotted
  ✅ ROC comparison plotted
  ✅ Confusion matrices plotted
  ✅ Feature importance plotted

Creating visualizations for NONE method...
  ✅ Individual model metrics plotted
  ✅ ROC comparison plotted
  ✅ Confusion matrices plotted
  ✅ Feature importance plotted

All ensemble visualizations saved to seongnam_ensemble_results_original_vs_smote folder!

====================================================================================================
DETAILED ENSEMBLE ANALYSIS RESULTS: ORIGINAL vs SMOTE COMPARISON
====================================================================================================

====================================================================================================
RESULTS FOR ORIGINAL DISTRIBUTION
====================================================================================================

📊 Before Redevelopment
==========================================================================================
📋 Data Information:
  Balance Method: Original Distribution (No Balancing)
  Original Samples: 708
  Processed Samples: 708
  Original Features: 10
  PCA Components: 10 (explained variance: 1.000)
  XGBoost Available: ✅ Yes

🔍 Original Features Performance:
Model                Accuracy   CV Acc     Precision  Recall     F1-Score   AUC       
------------------------------------------------------------------------------------------
RandomForest         0.637      0.637      0.619      0.599      0.606      0.787     
GradientBoosting     0.606      0.606      0.593      0.580      0.585      0.761     
XGBoost              0.627      0.627      0.614      0.596      0.604      0.778     
LogisticRegression   0.641      0.641      0.637      0.602      0.615      0.794     
KNeighbors           0.564      0.564      0.544      0.512      0.521      0.725     
DecisionTree         0.552      0.552      0.526      0.522      0.524      0.645     
VotingEnsemble       0.636      0.636      0.624      0.598      0.608      0.786     

🔍 PCA Components Performance:
Model                Accuracy   CV Acc     Precision  Recall     F1-Score   AUC       
------------------------------------------------------------------------------------------
RandomForest         0.614      0.615      0.608      0.560      0.574      0.772     
GradientBoosting     0.581      0.581      0.563      0.536      0.546      0.748     
XGBoost              0.585      0.585      0.569      0.536      0.547      0.762     
LogisticRegression   0.641      0.641      0.637      0.602      0.615      0.794     
KNeighbors           0.564      0.564      0.544      0.512      0.521      0.725     
DecisionTree         0.564      0.564      0.534      0.515      0.522      0.639     
VotingEnsemble       0.607      0.607      0.593      0.553      0.565      0.778     

🏆 Best Performing Model: LogisticRegression (Accuracy: 0.641)

📈 LogisticRegression Per-Class Metrics (Original Features):
Class           Precision  Recall     F1-Score   Support 
-------------------------------------------------------
Low             0.693      0.770      0.730      326     
Medium          0.564      0.553      0.558      264     
High            0.655      0.483      0.556      118     

📊 After Redevelopment
==========================================================================================
📋 Data Information:
  Balance Method: Original Distribution (No Balancing)
  Original Samples: 461
  Processed Samples: 461
  Original Features: 10
  PCA Components: 9 (explained variance: 0.951)
  XGBoost Available: ✅ Yes

🔍 Original Features Performance:
Model                Accuracy   CV Acc     Precision  Recall     F1-Score   AUC       
------------------------------------------------------------------------------------------
RandomForest         0.803      0.803      0.766      0.715      0.736      0.862     
GradientBoosting     0.770      0.770      0.727      0.678      0.698      0.823     
XGBoost              0.785      0.785      0.760      0.701      0.725      0.859     
LogisticRegression   0.781      0.781      0.738      0.687      0.708      0.852     
KNeighbors           0.703      0.703      0.620      0.564      0.582      0.779     
DecisionTree         0.714      0.714      0.631      0.623      0.627      0.728     
VotingEnsemble       0.785      0.785      0.760      0.683      0.711      0.860     

🔍 PCA Components Performance:
Model                Accuracy   CV Acc     Precision  Recall     F1-Score   AUC       
------------------------------------------------------------------------------------------
RandomForest         0.714      0.714      0.641      0.555      0.576      0.820     
GradientBoosting     0.692      0.692      0.595      0.556      0.570      0.780     
XGBoost              0.705      0.705      0.612      0.541      0.558      0.814     
LogisticRegression   0.779      0.779      0.734      0.679      0.701      0.850     
KNeighbors           0.716      0.716      0.637      0.579      0.598      0.781     
DecisionTree         0.649      0.649      0.516      0.507      0.511      0.614     
VotingEnsemble       0.727      0.727      0.632      0.566      0.584      0.826     

🏆 Best Performing Model: RandomForest (Accuracy: 0.803)

📈 RandomForest Per-Class Metrics (Original Features):
Class           Precision  Recall     F1-Score   Support 
-------------------------------------------------------
Low             0.848      0.918      0.881      279     
Medium          0.707      0.646      0.675      127     
High            0.744      0.582      0.653      55      

🎯 Feature Importance Comparison (ORIGINAL DISTRIBUTION):
------------------------------------------------------------------------------------------

📊 RandomForest Feature Importance:
Feature                   Before     After      Change     Status      
---------------------------------------------------------------------------
Age                       0.136      0.098          -0.038 ↘️ Decreased
Residence_Period          0.136      0.112          -0.024 ↘️ Decreased
Future_Residence_Intent_Pos 0.052      0.053          +0.001 Stable      
Settlement_Mindset        0.029      0.010          -0.019 ↘️ Decreased
Place_Attachment          0.166      0.062          -0.104 ↘️ Decreased
Housing_Satisfaction      0.170      0.108          -0.062 ↘️ Decreased
Monthly_Income            0.082      0.068          -0.014 ↘️ Decreased
Debt_Free                 0.033      0.022          -0.011 ↘️ Decreased
Life_Satisfaction_Pos     0.079      0.374          +0.295 ↗️ Increased
Public_Transport_Satisfaction 0.118      0.095          -0.024 ↘️ Decreased

📊 GradientBoosting Feature Importance:
Feature                   Before     After      Change     Status      
---------------------------------------------------------------------------
Age                       0.151      0.091          -0.059 ↘️ Decreased
Residence_Period          0.160      0.121          -0.039 ↘️ Decreased
Future_Residence_Intent_Pos 0.035      0.024          -0.011 ↘️ Decreased
Settlement_Mindset        0.025      0.012          -0.014 ↘️ Decreased
Place_Attachment          0.195      0.041          -0.154 ↘️ Decreased
Housing_Satisfaction      0.178      0.065          -0.113 ↘️ Decreased
Monthly_Income            0.068      0.055          -0.013 ↘️ Decreased
Debt_Free                 0.022      0.017          -0.005 Stable      
Life_Satisfaction_Pos     0.054      0.509          +0.455 ↗️ Increased
Public_Transport_Satisfaction 0.113      0.067          -0.046 ↘️ Decreased

📊 XGBoost Feature Importance:
Feature                   Before     After      Change     Status      
---------------------------------------------------------------------------
Age                       0.069      0.051          -0.019 ↘️ Decreased
Residence_Period          0.067      0.049          -0.019 ↘️ Decreased
Future_Residence_Intent_Pos 0.062      0.054          -0.008 Stable      
Settlement_Mindset        0.080      0.069          -0.011 ↘️ Decreased
Place_Attachment          0.250      0.062          -0.188 ↘️ Decreased
Housing_Satisfaction      0.179      0.090          -0.088 ↘️ Decreased
Monthly_Income            0.071      0.043          -0.028 ↘️ Decreased
Debt_Free                 0.077      0.042          -0.034 ↘️ Decreased
Life_Satisfaction_Pos     0.069      0.493          +0.424 ↗️ Increased
Public_Transport_Satisfaction 0.076      0.048          -0.029 ↘️ Decreased

====================================================================================================
RESULTS FOR SMOTE BALANCED
====================================================================================================

📊 Before Redevelopment
==========================================================================================
📋 Data Information:
  Balance Method: SMOTE Oversampling
  Original Samples: 708
  Processed Samples: 978
  Original Features: 10
  PCA Components: 10 (explained variance: 1.000)
  XGBoost Available: ✅ Yes

🔍 Original Features Performance:
Model                Accuracy   CV Acc     Precision  Recall     F1-Score   AUC       
------------------------------------------------------------------------------------------
RandomForest         0.725      0.725      0.724      0.725      0.724      0.880     
GradientBoosting     0.713      0.713      0.713      0.713      0.713      0.862     
XGBoost              0.715      0.715      0.716      0.715      0.715      0.877     
LogisticRegression   0.665      0.665      0.664      0.665      0.664      0.821     
KNeighbors           0.674      0.674      0.668      0.674      0.666      0.834     
DecisionTree         0.647      0.647      0.650      0.647      0.648      0.751     
VotingEnsemble       0.726      0.726      0.726      0.726      0.726      0.878     

🔍 PCA Components Performance:
Model                Accuracy   CV Acc     Precision  Recall     F1-Score   AUC       
------------------------------------------------------------------------------------------
RandomForest         0.709      0.709      0.708      0.709      0.708      0.867     
GradientBoosting     0.691      0.691      0.692      0.691      0.691      0.858     
XGBoost              0.708      0.708      0.705      0.708      0.706      0.868     
LogisticRegression   0.665      0.665      0.664      0.665      0.664      0.821     
KNeighbors           0.674      0.674      0.668      0.674      0.666      0.834     
DecisionTree         0.605      0.605      0.602      0.605      0.604      0.691     
VotingEnsemble       0.699      0.699      0.696      0.699      0.697      0.865     

🏆 Best Performing Model: VotingEnsemble (Accuracy: 0.726)

📈 VotingEnsemble Per-Class Metrics (Original Features):
Class           Precision  Recall     F1-Score   Support 
-------------------------------------------------------
Low             0.714      0.696      0.705      326     
Medium          0.641      0.647      0.644      326     
High            0.822      0.834      0.828      326     

📊 After Redevelopment
==========================================================================================
📋 Data Information:
  Balance Method: SMOTE Oversampling
  Original Samples: 461
  Processed Samples: 837
  Original Features: 10
  PCA Components: 9 (explained variance: 0.951)
  XGBoost Available: ✅ Yes

🔍 Original Features Performance:
Model                Accuracy   CV Acc     Precision  Recall     F1-Score   AUC       
------------------------------------------------------------------------------------------
RandomForest         0.875      0.875      0.876      0.875      0.875      0.961     
GradientBoosting     0.861      0.861      0.864      0.861      0.862      0.950     
XGBoost              0.877      0.877      0.878      0.877      0.877      0.958     
LogisticRegression   0.741      0.741      0.740      0.741      0.740      0.881     
KNeighbors           0.814      0.814      0.815      0.814      0.812      0.927     
DecisionTree         0.803      0.803      0.802      0.803      0.802      0.861     
VotingEnsemble       0.870      0.870      0.870      0.870      0.870      0.959     

🔍 PCA Components Performance:
Model                Accuracy   CV Acc     Precision  Recall     F1-Score   AUC       
------------------------------------------------------------------------------------------
RandomForest         0.851      0.851      0.851      0.851      0.851      0.949     
GradientBoosting     0.828      0.828      0.829      0.828      0.828      0.938     
XGBoost              0.851      0.851      0.851      0.851      0.851      0.948     
LogisticRegression   0.743      0.743      0.742      0.743      0.742      0.876     
KNeighbors           0.804      0.804      0.806      0.804      0.802      0.930     
DecisionTree         0.781      0.781      0.783      0.781      0.782      0.841     
VotingEnsemble       0.847      0.847      0.848      0.847      0.847      0.952     

🏆 Best Performing Model: XGBoost (Accuracy: 0.877)

📈 XGBoost Per-Class Metrics (Original Features):
Class           Precision  Recall     F1-Score   Support 
-------------------------------------------------------
Low             0.835      0.889      0.861      279     
Medium          0.853      0.814      0.833      279     
High            0.945      0.928      0.937      279     

🎯 Feature Importance Comparison (SMOTE BALANCED):
------------------------------------------------------------------------------------------

📊 RandomForest Feature Importance:
Feature                   Before     After      Change     Status      
---------------------------------------------------------------------------
Age                       0.099      0.070          -0.029 ↘️ Decreased
Residence_Period          0.106      0.075          -0.031 ↘️ Decreased
Future_Residence_Intent_Pos 0.049      0.085          +0.036 ↗️ Increased
Settlement_Mindset        0.028      0.010          -0.018 ↘️ Decreased
Place_Attachment          0.191      0.067          -0.123 ↘️ Decreased
Housing_Satisfaction      0.231      0.122          -0.109 ↘️ Decreased
Monthly_Income            0.073      0.058          -0.015 ↘️ Decreased
Debt_Free                 0.027      0.018          -0.010 Stable      
Life_Satisfaction_Pos     0.084      0.411          +0.327 ↗️ Increased
Public_Transport_Satisfaction 0.111      0.084          -0.027 ↘️ Decreased

📊 GradientBoosting Feature Importance:
Feature                   Before     After      Change     Status      
---------------------------------------------------------------------------
Age                       0.096      0.066          -0.031 ↘️ Decreased
Residence_Period          0.122      0.088          -0.033 ↘️ Decreased
Future_Residence_Intent_Pos 0.028      0.053          +0.025 ↗️ Increased
Settlement_Mindset        0.019      0.012          -0.007 Stable      
Place_Attachment          0.167      0.030          -0.137 ↘️ Decreased
Housing_Satisfaction      0.323      0.041          -0.281 ↘️ Decreased
Monthly_Income            0.064      0.046          -0.019 ↘️ Decreased
Debt_Free                 0.026      0.009          -0.017 ↘️ Decreased
Life_Satisfaction_Pos     0.062      0.609          +0.547 ↗️ Increased
Public_Transport_Satisfaction 0.093      0.047          -0.046 ↘️ Decreased

📊 XGBoost Feature Importance:
Feature                   Before     After      Change     Status      
---------------------------------------------------------------------------
Age                       0.059      0.041          -0.018 ↘️ Decreased
Residence_Period          0.058      0.039          -0.019 ↘️ Decreased
Future_Residence_Intent_Pos 0.061      0.071          +0.011 ↗️ Increased
Settlement_Mindset        0.074      0.077          +0.003 Stable      
Place_Attachment          0.223      0.060          -0.163 ↘️ Decreased
Housing_Satisfaction      0.245      0.082          -0.164 ↘️ Decreased
Monthly_Income            0.068      0.039          -0.029 ↘️ Decreased
Debt_Free                 0.069      0.036          -0.032 ↘️ Decreased
Life_Satisfaction_Pos     0.073      0.510          +0.436 ↗️ Increased
Public_Transport_Satisfaction 0.071      0.045          -0.025 ↘️ Decreased

====================================================================================================
✅ Enhanced Analysis Complete - Original vs SMOTE Comparison
🚀 XGBoost successfully integrated into ensemble analysis
📊 Comparison shows impact of SMOTE balancing on model performance
🎯 Performance filtering ensures only reliable models (Accuracy >= 0.5) in ensemble
====================================================================================================

=== Enhanced Ensemble Analysis Complete ===
Results saved in 'seongnam_ensemble_results_original_vs_smote' folder with subfolders for each method:
- none/: Original distribution results
- smote/: SMOTE balanced results

Each subfolder contains:
- individual_model_metrics_*.png: Individual model performance charts
- roc_comparison_*.png: ROC comparison across periods
- confusion_matrices_*.png: Confusion matrices with per-class metrics
- feature_importance_*.png: Feature importance comparison

Enhanced Ensemble Models Analyzed (in logical order):
🌳 Tree-based Models:
- Random Forest (Original & PCA)
- Gradient Boosting (Original & PCA)
- XGBoost (Original & PCA) ✅

📊 Additional Base Models:
- Logistic Regression (Original & PCA)
- K-Nearest Neighbors (Original & PCA)
- Decision Tree (Original & PCA)

🏆 Final Ensemble:
- Voting Ensemble: RandomForest + GradientBoosting + XGBoost + LogisticRegression + KNN (qualified models only) (Original & PCA)

Key Features:
- 🔄 ALL FEATURES CONVERTED TO POSITIVE DIRECTION (higher = better)
- 📊 Original vs SMOTE comparison (no manual sampling)
- 🎯 Performance filtering: Only models with Accuracy >= 0.5 in ensemble
- Enhanced model set with XGBoost integration
- Detailed metrics: Accuracy, Precision, Recall, F1-Score, AUC
- ROC curves with before/after comparison
- Per-class performance analysis
- Feature importance comparison across all tree-based models
- Cross-validation with 5-fold CV
- Automatic model availability detection
- English-only labels for clean visualization
- Error handling for robust analysis

📊 Feature Interpretation Guide (All Positive Direction):
- Future_Residence_Intent_Pos: Higher = Stronger residence intention
- Residence_Satisfaction: Higher = Higher residence satisfaction
- Life_Satisfaction_Pos: Higher = Higher life satisfaction
- Place_Attachment: Higher = Stronger place attachment
- Settlement_Mindset: Higher = Stronger settlement mindset
- Debt_Free: 1=No debt(good), 0=Has debt(bad)
- Residence_Period: Higher = Longer residence
- Monthly_Income: Higher = Higher income
- Age: Context dependent

🎯 Target Variable: Low < Medium < High (Elderly-Friendliness Grade)
- Low: Low elderly-friendliness
- Medium: Medium elderly-friendliness
- High: High elderly-friendliness

🔧 Performance Filtering: Only models with Accuracy >= 0.5 included in ensemble